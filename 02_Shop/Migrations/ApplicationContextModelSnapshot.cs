// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _02_Shop;

#nullable disable

namespace _02_Shop.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_02_Shop.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Car ware"
                        });
                });

            modelBuilder.Entity("_02_Shop.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Rome"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "London"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            Name = "Parice"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            Name = "Washington"
                        });
                });

            modelBuilder.Entity("_02_Shop.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Great Britain"
                        },
                        new
                        {
                            Id = 4,
                            Name = "France"
                        },
                        new
                        {
                            Id = 5,
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("_02_Shop.Entities.ShopsProducts", b =>
                {
                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ShopId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShopsProducts", (string)null);

                    b.HasData(
                        new
                        {
                            ShopId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            ShopId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            ShopId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            ShopId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            ShopId = 1,
                            ProductId = 5
                        },
                        new
                        {
                            ShopId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            ShopId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            ShopId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            ShopId = 2,
                            ProductId = 4
                        },
                        new
                        {
                            ShopId = 2,
                            ProductId = 5
                        },
                        new
                        {
                            ShopId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            ShopId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            ShopId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            ShopId = 3,
                            ProductId = 4
                        },
                        new
                        {
                            ShopId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            ShopId = 4,
                            ProductId = 1
                        },
                        new
                        {
                            ShopId = 4,
                            ProductId = 2
                        },
                        new
                        {
                            ShopId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            ShopId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            ShopId = 4,
                            ProductId = 5
                        },
                        new
                        {
                            ShopId = 5,
                            ProductId = 1
                        },
                        new
                        {
                            ShopId = 5,
                            ProductId = 2
                        },
                        new
                        {
                            ShopId = 5,
                            ProductId = 3
                        },
                        new
                        {
                            ShopId = 5,
                            ProductId = 4
                        },
                        new
                        {
                            ShopId = 5,
                            ProductId = 5
                        },
                        new
                        {
                            ShopId = 6,
                            ProductId = 1
                        },
                        new
                        {
                            ShopId = 6,
                            ProductId = 2
                        },
                        new
                        {
                            ShopId = 6,
                            ProductId = 3
                        },
                        new
                        {
                            ShopId = 6,
                            ProductId = 4
                        },
                        new
                        {
                            ShopId = 6,
                            ProductId = 5
                        });
                });

            modelBuilder.Entity("_02_Shop.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Seller"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cleaner"
                        });
                });

            modelBuilder.Entity("_02_Shop.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Discount = 5f,
                            IsInStock = false,
                            Name = "Apple",
                            Price = 8m,
                            Quantity = 1500
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Discount = 0f,
                            IsInStock = false,
                            Name = "Laptop",
                            Price = 1500m,
                            Quantity = 9
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Discount = 2.3f,
                            IsInStock = false,
                            Name = "Scisors",
                            Price = 32m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Discount = 0f,
                            IsInStock = true,
                            Name = "Phone case",
                            Price = 40m,
                            Quantity = 200
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Discount = 5f,
                            IsInStock = false,
                            Name = "Joice",
                            Price = 15m,
                            Quantity = 150
                        });
                });

            modelBuilder.Entity("_02_Shop.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Soborna 12",
                            CityId = 1,
                            Name = "Shop1",
                            ParkingArea = 25
                        },
                        new
                        {
                            Id = 2,
                            Address = "Kovalyova 21",
                            CityId = 2,
                            Name = "Shop2",
                            ParkingArea = 20
                        },
                        new
                        {
                            Id = 3,
                            Address = "Franka 45",
                            CityId = 3,
                            Name = "Shop3"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Shevchenka 61",
                            CityId = 4,
                            Name = "Shop4"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Bila 58",
                            CityId = 5,
                            Name = "Shop5",
                            ParkingArea = 30
                        },
                        new
                        {
                            Id = 6,
                            Address = "Nebesna 87",
                            CityId = 5,
                            Name = "Shop6",
                            ParkingArea = 15
                        });
                });

            modelBuilder.Entity("_02_Shop.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jobiden@gmail.com",
                            Name = "Jo",
                            PhoneNumber = "0234234",
                            PositionId = 1,
                            Salary = 2344m,
                            ShopId = 1,
                            Surname = "Biden"
                        },
                        new
                        {
                            Id = 2,
                            Email = "dengree@gmail.com",
                            Name = "Den",
                            PhoneNumber = "3453463",
                            PositionId = 1,
                            Salary = 2363m,
                            ShopId = 2,
                            Surname = "Green"
                        },
                        new
                        {
                            Id = 3,
                            Email = "samblack@gmail.com",
                            Name = "Sam",
                            PhoneNumber = "34637457",
                            PositionId = 1,
                            Salary = 1558m,
                            ShopId = 3,
                            Surname = "Black"
                        },
                        new
                        {
                            Id = 4,
                            Email = "maxred@gmail.com",
                            Name = "Max",
                            PhoneNumber = "234353",
                            PositionId = 3,
                            Salary = 1954m,
                            ShopId = 2,
                            Surname = "Red"
                        },
                        new
                        {
                            Id = 5,
                            Email = "liamwhite@gmail.com",
                            Name = "Liam",
                            PhoneNumber = "34534",
                            PositionId = 2,
                            Salary = 3163m,
                            ShopId = 1,
                            Surname = "White"
                        });
                });

            modelBuilder.Entity("_02_Shop.City", b =>
                {
                    b.HasOne("_02_Shop.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_02_Shop.Entities.ShopsProducts", b =>
                {
                    b.HasOne("_02_Shop.Product", "Product")
                        .WithMany("ShopsProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_02_Shop.Shop", "Shop")
                        .WithMany("ShopsProducts")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_02_Shop.Product", b =>
                {
                    b.HasOne("_02_Shop.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_02_Shop.Shop", b =>
                {
                    b.HasOne("_02_Shop.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("_02_Shop.Worker", b =>
                {
                    b.HasOne("_02_Shop.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_02_Shop.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_02_Shop.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_02_Shop.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("_02_Shop.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("_02_Shop.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("_02_Shop.Product", b =>
                {
                    b.Navigation("ShopsProducts");
                });

            modelBuilder.Entity("_02_Shop.Shop", b =>
                {
                    b.Navigation("ShopsProducts");

                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
